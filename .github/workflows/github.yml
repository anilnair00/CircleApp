name: linux teting 

on:
  workflow_dispatch:
  # pull_request:
  #   types: [opened, synchronize, reopened, closed]
  push:
    branches:
     - master
     - develop
     - release

env:
  # AZURE_WEBAPP_NAME: "app-munson-api-eastus-dev-001"
  ArtifactName: "TEST"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
        
      - name: Restore dependencies
        run: dotnet restore CircleApp.sln

      - name: Build
        run: dotnet build CircleApp/CircleApp.csproj --configuration Release --no-restore
        
      - name: Publish project
        run: dotnet publish CircleApp/CircleApp.csproj --configuration Release --output ./publish

      - name: Create deployment zip
        run: |
          cd ./publish
          zip -r ../CircleApp.zip .
          cd ..
  
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: CircleAppPackage
          path: CircleApp.zip

  deployOnDev:
    runs-on: runner1
    needs: build
    # if: github.base_ref == 'master'
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
          name: CircleAppPackage
          path: CircleAppPackage

    - name: Deploy artifact to IIS via WinRM
       env:
          WINRM_HOST: ${{ secrets.IIS_SERVER }}
          WINRM_USER: ${{ secrets.IIS_USER }}
          WINRM_PASS: ${{ secrets.IIS_PASSWORD }}
        run: |
          python3 <<EOF
          import winrm
          import base64

          # Read artifact as bytes
          with open('CircleAppPackage/CircleApp.zip', 'rb') as f:
              data = f.read()

          # Connect to IIS with NTLM auth (for HTTPS, add port: 'server:5986' and transport='ntlm' or 'ssl')
          session = winrm.Session('${{ secrets.IIS_SERVER }}',
                                  auth=('${{ secrets.IIS_USER }}', '${{ secrets.IIS_PASSWORD }}'),
                                  transport='ntlm')

          # Chunk and upload (WinRM has a 50MB file limit)
          remote_path = r'C:\Temp\CircleApp.zip'
          chunk_size = 1024 * 1024
          for i in range(0, len(data), chunk_size):
              chunk = data[i:i+chunk_size]
              b64 = base64.b64encode(chunk).decode('utf-8')
              cmd = f"[IO.File]::WriteAllBytes('{remote_path}', [Convert]::FromBase64String('{b64}'))"
              if i > 0:
                  # Append chunk
                  cmd = f"[IO.File]::AppendAllText('{remote_path}.b64', '{b64}');"
              else:
                  # Overwrite for the first chunk
                  cmd = f"[IO.File]::WriteAllText('{remote_path}.b64', '{b64}');"
              session.run_ps(cmd)

          # After all chunks, decode from base64 on server
          ps_script = f"""
          $b64 = Get-Content '{remote_path}.b64' -Raw
          [IO.File]::WriteAllBytes('{remote_path}', [Convert]::FromBase64String($b64))
          Remove-Item '{remote_path}.b64'
          """
          session.run_ps(ps_script)

          # Unzip and deploy (change destination as needed)
          ps_script = '''
          Expand-Archive -Path "C:\\Temp\\CircleApp.zip" -DestinationPath "C:\\inetpub\\wwwroot\\CircleApp" -Force
          Restart-WebAppPool -Name "DefultAppPool"
          '''
          result = session.run_ps(ps_script)
          print(result.std_out.decode())
          print(result.std_err.decode())
          EOF




  
