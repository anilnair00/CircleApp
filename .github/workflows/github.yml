name: github teting 

on:
  workflow_dispatch:
  # pull_request:
  #   types: [opened, synchronize, reopened, closed]
  push:
    branches:
     - master
     - develop
     - release

env:
  # AZURE_WEBAPP_NAME: "app-munson-api-eastus-dev-001"
  ArtifactName: "TEST"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
        
      - name: Restore dependencies
        run: dotnet restore CircleApp.sln

      - name: Build
        run: dotnet build CircleApp/CircleApp.csproj --configuration Release --no-restore
        
      - name: Publish project
        run: dotnet publish CircleApp/CircleApp.csproj --configuration Release --output ./publish

      - name: Create deployment zip
        run: |
          cd ./publish
          zip -r ../CircleApp.zip .
          cd ..
  
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: CircleAppPackage
          path: CircleApp.zip

  deployOnDev:
    runs-on: runner1
    needs: build
    # if: github.base_ref == 'master'
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
          name: CircleAppPackage
          path: CircleAppPackage

    - name: Setup Python and Install WinRM client
      run: |
          python3 -m pip install --upgrade pip
          pip3 install pywinrm requests-ntlm
          
    - name: Deploy via WinRM
      run: |
          python3 - <<'EOF'
          import winrm, base64

          # --- Config ---
          win_host = "${{ secrets.IIS_HOST }}"      # IIS public IP or DNS
          win_user = "${{ secrets.IIS_USER }}"      # Windows user
          win_pass = "${{ secrets.IIS_PASSWORD }}"      # Windows password
          local_folder = "CircleAppPackage/CircleApp.zip"                # Build output folder on runner
          remote_temp = "C:\\temp\\"          # Temp staging folder on IIS
          remote_wwwroot = "C:\\inetpub\\wwwroot\\CircleApp"

          # --- Connect to WinRM ---
          session = winrm.Session(
              f"http://${{ secrets.IIS_SERVER }}:5985/wsman",
              auth=("${{ secrets.IIS_USER }}", "${{ secrets.IIS_PASSWORD }}"),
              transport="ntlm"
          )
      
          local_file = "CircleAppPackage/CircleApp.zip"
          remote_file = "C:\\Temp\\"
      
          with open(local_file, "rb") as f:
              content = base64.b64encode(f.read()).decode("utf-8")
      
          # Use WriteAllBytes to preserve binary content
          ps_script = f"""
          $bytes = [System.Convert]::FromBase64String("{content}")
          [System.IO.File]::WriteAllBytes("{remote_file}", $bytes)
          """
          result = session.run_ps(ps_script)
          print(result.std_out.decode())
          print(result.std_err.decode())
          EOF




  
