name: github teting 

on:
  workflow_dispatch:
  # pull_request:
  #   types: [opened, synchronize, reopened, closed]
  push:
    branches:
     - master
     - develop
     - release

env:
  # AZURE_WEBAPP_NAME: "app-munson-api-eastus-dev-001"
  ArtifactName: "TEST"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
        
      - name: Restore dependencies
        run: dotnet restore CircleApp.sln

      - name: Build
        run: dotnet build CircleApp/CircleApp.csproj --configuration Release --no-restore
        
      - name: Publish project
        run: dotnet publish CircleApp/CircleApp.csproj --configuration Release --output ./publish

      - name: Create deployment zip
        run: |
          cd ./publish
          zip -r ../CircleApp.zip .
          cd ..
  
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: CircleAppPackage
          path: CircleApp.zip

  deployOnDev:
    runs-on: runner1
    needs: build
    # if: github.base_ref == 'master'
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
          name: CircleAppPackage
          path: CircleAppPackage

    - name: Install Python + pywinrm
      run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install pywinrm

    - name: Deploy to IIS via WinRM
      run: |
          python3 - <<'EOF'
          import winrm, base64

          # Load ZIP file and encode as base64
          zip_path = "CircleAppPackage/CircleApp.zip"
          with open(zip_path, "rb") as f:
              encoded = base64.b64encode(f.read()).decode("utf-8")

          session = winrm.Session(
              target='${{ secrets.IIS_HOST }}',
              auth=('${{ secrets.IIS_USER }}', '${{ secrets.IIS_PASSWORD }}'),
              transport='basic'
          )

          # Step 1: Write base64 string into file
          ps_script = f'''
          $b64 = "{encoded}"
          $bytes = [System.Convert]::FromBase64String($b64)
          $filePath = "C:\\deploy\\CircleApp.zip"
          if (-Not (Test-Path "C:\\deploy")) {{
              New-Item -Path "C:\\deploy" -ItemType Directory | Out-Null
          }}
          [IO.File]::WriteAllBytes($filePath, $bytes)
          '''
          r = session.run_ps(ps_script)
          print("Upload:", r.std_out.decode(), r.std_err.decode())

          # Step 2: Extract ZIP into IIS wwwroot
          ps_extract = '''
          Expand-Archive -Path "C:\\deploy\\CircleApp.zip" -DestinationPath "C:\\inetpub\\wwwroot\\CircleApp" -Force
          '''
          r = session.run_ps(ps_extract)
          print("Extract:", r.std_out.decode(), r.std_err.decode())

          # Step 3: Restart IIS
          r = session.run_cmd("iisreset")
          print("IIS Reset:", r.std_out.decode(), r.std_err.decode())
          EOF




  
