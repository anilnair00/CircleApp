# github action

name: Deploy 

on:
  workflow_dispatch:

env:
  # AZURE_WEBAPP_NAME: "app-munson-api-eastus-dev-001"
  ArtifactName: "TEST"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
        
      - name: Restore dependencies
        run: dotnet restore CircleApp.sln

      - name: Build
        run: dotnet build CircleApp/CircleApp.csproj --configuration Release --no-restore
        
      - name: Publish project
        run: dotnet publish CircleApp/CircleApp.csproj --configuration Release --output ./publish

      - name: Create deployment zip
        run: |
          cd ./publish
          zip -r ../CircleApp.zip .
          cd ..
  
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: CircleAppPackage
          path: CircleApp.zip

  deployOnDev:
    runs-on: dev
    needs: build
    # if: github.base_ref == 'develop' || startsWith(github.ref, 'refs/heads/feature/*')
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
          name: CircleAppPackage
          path: CircleAppPackage


###############################################################################################
    - name: Deploy to IIS with msdeploy
      shell: powershell
      run: |
        # Stop on any error
        $ErrorActionPreference = "Stop"
        
        # ---------------- Configuration ----------------
        $SiteName     = "Default Web Site"
        $AppPool      = "DefaultAppPool"
        $PhysicalPath = "C:\inetpub\wwwroot"
        $PackagePath  = "C:\Users\Sam\actions-runner\actions-runner\_work\CircleApp\CircleApp\CircleAppPackage\CircleApp.zip"
        $Server       = "20.245.242.103"
        $Username     = "sam"
        $Password     = "p@ssword@123"
        $msdeployPath = "C:\Program Files\IIS\Microsoft Web Deploy V3\msdeploy.exe"
        
        Import-Module WebAdministration
        
        # ---------------- Check if site exists ----------------
        $site = Get-Website | Where-Object { $_.Name -eq $SiteName }
        
        if (-not $site) {
            Write-Host "Site '$SiteName' does not exist. Creating new site..."
        
            # Create app pool if it doesn't exist
            if (-not (Get-WebAppPoolState -Name $AppPool -ErrorAction SilentlyContinue)) {
                New-WebAppPool -Name $AppPool
                Write-Host "App Pool '$AppPool' created."
            }
        
            # Create the site
            if (-not (Test-Path $PhysicalPath)) {
                New-Item -ItemType Directory -Path $PhysicalPath -Force
            }
        
            New-Website -Name $SiteName -Port 80 -PhysicalPath $PhysicalPath -ApplicationPool $AppPool
            Write-Host "Site '$SiteName' created."
        } else {
            Write-Host "Site '$SiteName' exists. Updating content..."
        }
        
        # ---------------- Ensure physical path exists ----------------
        if (-not (Test-Path $PhysicalPath)) {
            New-Item -ItemType Directory -Path $PhysicalPath -Force
        }
        
        # ---------------- Deploy using MSDeploy (contentPath) ----------------
        & "$msdeployPath" `
            -verb:sync `
            -source:package="$PackagePath" `
            -dest:contentPath="$PhysicalPath",wmsvc="$Server",userName="$Username",password="$Password",authType="Basic",allowUntrusted=True `
            -enableRule:DoNotDeleteRule
        
        Write-Host "Deployment complete!"
      
        
    # - name: Run MSDeploy
    #   shell: powershell
    #   run: |
    #       $msdeploy = "C:\Program Files\IIS\Microsoft Web Deploy V3\msdeploy.exe"
    #       $package = "$(Get-Location)\CircleAppPackage\CircleApp.zip"

    #       & $msdeploy `
    #         -verb:sync `
    #         -source:package="$package" `
    #         -dest:auto,computerName="https://20.245.242.103:8172/msdeploy.axd?site=CircleApp",userName="${{ secrets.IIS_USER }}",password="${{ secrets.IIS_PASSWORD }}",authType="Basic" `
    #         -allowUntrusted=True


    # - name: Install Azure CLI
    #   run: |
    #     curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash 
        
      # deploy to azure
      # - name: Deploy to Azure Web App
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
      #     publish-profile: ${{ secrets.API_PUBLISH_SECRET }}
      #     package: ./publish
