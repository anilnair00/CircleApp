name: linux testing 

on:
  workflow_dispatch:
  # pull_request:
  #   types: [opened, synchronize, reopened, closed]
  # push:
  #   branches:
  #    - master
  #    - develop
  #    - release

env:
  # AZURE_WEBAPP_NAME: "app-munson-api-eastus-dev-001"
  ArtifactName: "TEST"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
        
      - name: Restore dependencies
        run: dotnet restore CircleApp.sln

      - name: Build
        run: dotnet build CircleApp/CircleApp.csproj --configuration Release --no-restore
        
      - name: Publish project
        run: dotnet publish CircleApp/CircleApp.csproj --configuration Release --output ./publish

      - name: Create deployment zip
        run: |
          cd ./publish
          zip -r ../CircleApp.zip .
          cd ..
  
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: CircleAppPackage
          path: CircleApp.zip

  deployOnDev:
    runs-on: runner1
    needs: build
    # if: github.base_ref == 'master'
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
          name: CircleAppPackage
          path: CircleAppPackage

    # - name: Copy files to remote server via SCP
    #   env:
    #     SSH_KEY: p@ssword@123
    #   run: |
    #     # Install sshpass if you want to use password (not recommended)
    #     sudo apt-get update && sudo apt-get install -y sshpass

    - name: Install PowerShell
      run: |
        # Update package list
        sudo apt-get update
        
        # Install pre-requisites
        sudo apt-get install -y wget apt-transport-https software-properties-common
        
        # Download Microsoft repository GPG keys
        wget -q "https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb" -O packages-microsoft-prod.deb
        
        # Register Microsoft repository
        sudo dpkg -i packages-microsoft-prod.deb
        
        # Update after adding repo
        sudo apt-get update
        
        # Install PowerShell
        sudo apt-get install -y powershell
        
        # Start PowerShell
        pwsh
    - name: Copy artifact to Windows Server
      run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          sshpass -p '${{ secrets.IIS_PASSWORD }}' \
          scp -o StrictHostKeyChecking=no CircleAppPackage/CircleApp.zip \
          sam@20.245.242.103:C:/Temp/
          # ${{ secrets.IIS_USER }}@${{ secrets.IIS_SERVER }}:C:/Temp/
          # sshpass -p ${{ secrets.IIS_PASSWORD }} \
          # ssh -o StrictHostKeyChecking=no sam@20.245.242.103 powershell -Command '
          # iisreset /stop;
          # Expand-Archive -Path C:\temp\CircleApp.zip -DestinationPath C:\inetpub\wwwroot\CircleApp -Force;
          # iisreset /start
          # '
    - name: Unzip on IIS via SSH
      # env:
      #     IIS_USERNAME: "sam"
      #     IIS_PASSWORD: "p@ssword@123"
      #     IIS_HOST: "20.245.242.103"
      #     IIS_TARGET_PATH: C:\inetpub\wwwroot\CircleApp
      run: |
          # sshpass -p "$IIS_PASSWORD" ssh -o StrictHostKeyChecking=no "$IIS_USERNAME@$IIS_HOST" powershell -Command "Expand-Archive -Path 'C:\temp\CircleApp.zip' -DestinationPath '$env:IIS_TARGET_PATH' -Force"      
          # sshpass -p "p@ssword@123" ssh -o StrictHostKeyChecking=no sam@20.245.242.103 'powershell -Command "& ''C:\Program Files\IIS\Microsoft Web Deploy V3\msdeploy.exe'' -verb:sync -source:package=''C:\temp\CircleApp.zip'' -dest:auto,computerName='20.245.242.103',userName='sam',password='p@ssword@123',authType=''basic'' -allowUntrusted"'
          # sshpass -p "p@ssword@123" ssh -o StrictHostKeyChecking=no "sam@20.245.242.103" \
          # "powershell -Command '& \"C:\Program Files\IIS\Microsoft Web Deploy V3\msdeploy.exe\" -verb:sync -source:package=\"C:\temp\CircleApp.zip\" -dest:auto,computerName=\"20.245.242.103\",userName=\"sam\",password=\"p@ssword@123\",authType=\"basic\" -allowUntrusted'"
          # imp sshpass -p "p@ssword@123" ssh -o StrictHostKeyChecking=no "sam@20.245.242.103" \
          # imp "powershell -Command \"Expand-Archive -Path 'C:\\temp\\CircleApp.zip' -DestinationPath 'C:\inetpub\wwwroot\CircleApp' -Force\""
          # "powershell -Command \"Expand-Archive -Path 'C:\\temp\\CircleApp.zip' -DestinationPath 'C:\\inetpub\\wwwroot\\CircleApp' -Force; Import-Module WebAdministration; Stop-Website -Name 'Default Web Site'; Start-Website -Name 'Default Web Site'\""
          sshpass -p "p@ssword@123" ssh -o StrictHostKeyChecking=no "sam@20.245.242.103" powershell -File "C:\Users\Sam\deploy.ps1"
      
          # sshpass -p "p@swword@123" ssh -o StrictHostKeyChecking=no "sam@20.245.242.103" \
          # "powershell -Command \"& 'C:\\Program Files\\IIS\\Microsoft Web Deploy V3\\msdeploy.exe' -verb:sync -source:package='C:\\temp\\CircleApp.zip' -dest:auto,computerName='20.245.242.103',userName='sam',password='p@ssword@123',authType='basic' -allowUntrusted\""
###########################################################################################

    # - name: Copy artifact to Windows Server
    #   run: |
    #       sudo apt-get update
    #       sudo apt-get install -y sshpass
    #       sshpass -p '${{ secrets.IIS_PASSWORD }}' \
    #       scp -o StrictHostKeyChecking=no CircleAppPackage/CircleApp.zip \
    #       sam@20.245.242.103:C:/Temp/
    #       # ${{ secrets.IIS_USER }}@${{ secrets.IIS_SERVER }}:C:/Temp/
          
    # - name: Run deploy script remotely
    #   run: |
    #     pwsh -Command "
    #       \$session = New-PSSession -HostName 20.245.242.103 -UserName sam -SSHTransport
    #       Copy-Item ./deploy.ps1 -Destination C:\temp\deploy.ps1 -ToSession \$session -Force
    #       Invoke-Command -Session \$session -ScriptBlock { pwsh -File C:\temp\deploy.ps1 }
    #       Remove-PSSession \$session
    #     "
#####################################################################################################################
    
    # - name: Deploy in IIS
    #   shell: pwsh
    #   run: |
    #       pwsh -Command "
    #         \$user = '${{ secrets.IIS_USER }}'
    #         \$pass = ConvertTo-SecureString '${{ secrets.IIS_PASSWORD }}' -AsPlainText -Force
    #         \$cred = New-Object System.Management.Automation.PSCredential(\$user, \$pass)

    #         # Create SSH-based session
    #         \$session = New-PSSession -HostName 20.245.242.103 -UserName \$user -SSHTransport

    #         # Example: Copy artifact and restart IIS
    #         Invoke-Command -Session \$session -ScriptBlock {
    #           Write-Host 'Deploying app to IIS...'
    #           # Stop app pool
    #           Stop-WebAppPool -Name 'DefaultAppPool'
    #           # Deploy files (you could use robocopy, unzip, etc.)
    #           Expand-Archive -Path C:\Temp\CircleApp.zip -DestinationPath C:\inetpub\wwwroot\MyApp -Force
    #           # Restart app pool
    #           Start-WebAppPool -Name 'DefaultAppPool'
    #         }
    #         # Close session
    #         Remove-PSSession \$session
    #       "         
 ###########################################################3
 
    # - name: Install tools (if not present in AKS runner image)
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y openssh-client
 
    # - name: Setup SSH key
    #   run: |
    #     mkdir -p ~/.ssh
    #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
    #     chmod 600 ~/.ssh/id_rsa
    #     ssh-keyscan -H ${{ secrets.WIN_SERVER }} >> ~/.ssh/known_hosts
 
    # - name: Copy build artifacts to IIS server
    #   run: |
    #     scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r ./dotnetcorewebapp/* \
    #       ${{ secrets.WIN_USER }}@${{ secrets.WIN_SERVER }}:/C:/deploy/dotnetcorewebapp/
 
    # - name: Restart IIS and move files
    #   run: |
    #     ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
    #       ${{ secrets.WIN_USER }}@${{ secrets.WIN_SERVER }} powershell -Command "
    #         iisreset /stop;
    #         Copy-Item 'C:\deploy\dotnetcorewebapp\*' 'C:\inetpub\wwwroot\dotnetcore-webapp' -Recurse -Force;
    #         iisreset /start
    #       "

###############################################################################
